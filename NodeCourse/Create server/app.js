// Импортируем модуль http с помощью директивы require
const http = require('http');

// Сделаем небольшой рефакторинг кода, а в частности вынесем порт в отдельную константу
const PORT = 3000;

// Следующим шагом мы создаём сервер(Для этого воспользуемся встроенным методом createServer) P.S. В качестве аргумента метод принимает callback функцию. Сама функция принимает два аргумента - объект запроса и ответа
const server = http.createServer((req, res) => {
  console.log('Server request');
  // Получаем информацию о запрашиваемом пути и методе
  console.log(req.url, req.method);

  // // Чтобы передать некую вспомогательную информацию и взаимодействовать с ней мы можем использовать метод setHeader
  res.setHeader('Content-Type', 'application/json');

  // // Подключаем стили
  // res.write('<head><link rel="stylesheet" href="#"></head>')

  // // Используем метод write для записи ответа и метод end который сообщает о том, что все необходимые данные были добавлены в ответ который отправляется и контроль можно возвращать браузеру(Метод write можно использовать сколько угодно, однако стоит помнить, что он должен быть перед методом end)
  // res.write('<h1>Hello world!</h1>');

  // Последнее на сегодня - возврат JSON формата(Это будет пример того, как создаётся API, тоесть при запросе на определёный url адресс будут возвращаться какие то конкретные данные)
  const data = JSON.stringify([
    { name: 'Tommy', age: 35 },
    { name: 'Arthur', age: 40 },
  ])

  res.end(data);
});



// Теперь создаём порт который будет его слушать(Применяем метод listen) P.S. В качестве аргументов передаём стандарт порта, его имя и callback функцию, внутри которой мы добавим консоль для вывода информации о том, что слушаем определённый порт и если по каким то причинам произойдёт ошибка, мы будем о ней знать
server.listen(PORT, 'localhost', (error) => {
  error ? console.log(error) : console.log(`listening port ${PORT}`);
});
